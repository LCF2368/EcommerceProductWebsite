name: Python CI

on:
  push:
    branches:
      - main  # Run on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Run on pull requests targeting the 'main' branch

jobs:
  test:
    runs-on: ubuntu-latest  # Run on an Ubuntu machine

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the repository

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Set the Python version to 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt  # Install dependencies from requirements.txt

    - name: Wait for MongoDB to be ready
      run: |
        for i in {1..10}; do
          if mongosh --eval 'db.adminCommand("ping")'; then
            echo "MongoDB is ready!"
            break
          fi
          echo "Waiting for MongoDB..."
          sleep 5
        done

    - name: Set up environment variables
      env:
        MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
        MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      run: |
        echo "MONGODB_USERNAME=${MONGODB_USERNAME}" > .env
        echo "MONGODB_PASSWORD=${MONGODB_PASSWORD}" >> .env

    - name: Run tests
      env:
        MONGO_URI: mongodb://localhost:27017  # Add environment variable for MongoDB URI
      run: python -m unittest discover -s flask_app/tests  # Run your unit tests
